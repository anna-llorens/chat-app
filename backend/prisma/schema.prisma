generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  chats     UserChat[]
  messages  Message[] @relation("UserMessages")
  notifications Notification[]
}

model Chat {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     UserChat[]
  messages  Message[] @relation("ChatMessages")
  notifications Notification[]
}

model UserChat {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  chatId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  chat      Chat     @relation(fields: [chatId], references: [id])
  createdAt DateTime @default(now())
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  senderId  String   @db.ObjectId
  chatId    String   @db.ObjectId
  sender    User     @relation("UserMessages", fields: [senderId], references: [id])
  chat      Chat     @relation("ChatMessages", fields: [chatId], references: [id])
  createdAt DateTime @default(now())
}

model Notification {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userId      String    @db.ObjectId
  chatId      String    @db.ObjectId
  count       Int       @default(0)
  user        User      @relation(fields: [userId], references: [id])
  chat        Chat      @relation(fields: [chatId], references: [id])
  updatedAt   DateTime  @updatedAt
  createdAt   DateTime  @default(now())

    @@unique([userId, chatId], name: "userId_chatId")
}
